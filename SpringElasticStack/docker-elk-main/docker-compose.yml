version: '3.7'

services:

  nginx:
    image: nginx
    container_name: nginx-proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    networks:
      - proxy

  db:
    image: mysql/mysql-server:latest
    container_name: mysql-database
    restart: always
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'example_user'
      MYSQL_PASSWORD: 'userpassword'
    ports:
      - 3306:3306
      - 33060:33060
    networks:
      - proxy

  portainer:
    image: portainer/portainer
    container_name: portainer-interface
    ports:
      - 9501:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - proxy

  adminer:
    image: adminer
    container_name: adminer-interface
    restart: always
    ports:
      - 9502:8080
    networks:
      - proxy

  springwebapp:
    image: juniomenchik/springwebapp-product-catalog:0.1.0
    container_name: springwebapp-product-catalog
    restart: always
    depends_on:
      - db
    ports:
      - 8080:8080
    networks:
      - proxy

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins-interface
    privileged: true
    hostname: jenkinsserver
    user: root
    labels:
      jenkins.aincrad.com.br: "Jenkins-Server by JeffMenchik.dev"
    ports:
      - 9503:8080
      - 50001:50000
    networks:
      - proxy
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  # The 'setup' service runs a one-off script which initializes the
  # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
  # values of the passwords defined in the '.env' file.
  #
  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  setup:
    container_name: setup-pipeline
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - proxy
    depends_on:
      - elasticsearch

  elasticsearch:
    container_name: elasticsearch-server
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - proxy

  logstash:
    container_name: logstash-server
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5044:5044"
      - "50000:50000/tcp"
      - "50000:50000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - proxy
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana-interface
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - proxy
    depends_on:
      - elasticsearch

networks:
  proxy:
    driver: bridge

volumes:
  setup:
  elasticsearch:
  portainer_data:
    driver: local
  jenkins-data:
    driver: local  
